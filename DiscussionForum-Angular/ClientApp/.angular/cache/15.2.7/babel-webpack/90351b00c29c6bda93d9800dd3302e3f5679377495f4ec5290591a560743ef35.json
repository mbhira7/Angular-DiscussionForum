{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./authentication.service\";\nexport class LoginComponent {\n  constructor(_formbuilder, _authService) {\n    this._formbuilder = _formbuilder;\n    this._authService = _authService;\n    this.loggedIn = false;\n    this.loginForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  loginUser() {\n    const user = this.loginForm.value;\n    this._authService.login(user).subscribe(response => {\n      if (response.success) {\n        this.loggedIn = true;\n        console.log(response.message);\n      } else {\n        console.log(\"Login failed\");\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login-component\"]],\n  decls: 11,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter your username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Log in\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;AAOrG,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAAyB,EAAUC,YAAyB;IAA5D,iBAAY,GAAZD,YAAY;IAAuB,iBAAY,GAAZC,YAAY;IAHnE,aAAQ,GAAG,KAAK;IAId,IAAI,CAACC,SAAS,GAAGF,YAAY,CAACG,KAAK,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAE,SAAS;IACP,MAAMC,IAAI,GAAG,IAAI,CAACN,SAAS,CAACO,KAAK;IAEjC,IAAI,CAACR,YAAY,CAACS,KAAK,CAACF,IAAI,CAAC,CAC1BG,SAAS,CAACC,QAAQ,IAAG;MACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpB,IAAI,CAACC,QAAQ,GAAG,IAAI;QACpBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,OAAO,CAAC;OAC9B,MACI;QACHF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;;IAE/B,CAAC,CAAC;EACN;;AAxBWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT3BC,+BAAuD;MAAzBA;QAAA,OAAYC,eAAW;MAAA,EAAC;MAClDD,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAAmH;MACvHA,iBAAM;MACNA,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAAuH;MAC3HA,iBAAM;MACNA,iCAA6E;MAAAA,uBAAM;MAAAA,iBAAS;;;MAT1FA,yCAAuB;MASHA,eAA8B;MAA9BA,gDAA8B","names":["Validators","LoginComponent","constructor","_formbuilder","_authService","loginForm","group","username","required","password","loginUser","user","value","login","subscribe","response","success","loggedIn","console","log","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/login.component.ts","/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/login.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\"\nimport { AuthService } from \"./authentication.service\"\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\"\n\n@Component({\n  selector: \"app-login-component\",\n  templateUrl: \"./login.component.html\",\n})\n\nexport class LoginComponent {\n  loggedIn = false\n  loginForm: FormGroup;\n\n  constructor(private _formbuilder: FormBuilder, private _authService: AuthService) {\n    this.loginForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    const user = this.loginForm.value\n\n    this._authService.login(user)\n      .subscribe(response => {\n        if (response.success) {\n          this.loggedIn = true\n          console.log(response.message)\n        }\n        else {\n          console.log(\"Login failed\")\n        }\n      })\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n    <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Enter your username\" formControlName=\"username\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Enter your password\" formControlName=\"password\">\n    </div>\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\">Log in</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}