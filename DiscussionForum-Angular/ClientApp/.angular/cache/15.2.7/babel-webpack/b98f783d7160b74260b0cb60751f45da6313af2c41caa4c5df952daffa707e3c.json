{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/question';\n  }\n  getQuestions() {\n    return this._http.get(this.baseUrl);\n  }\n  getUserQuestions() {\n    return this._http.get(`${this.baseUrl}/user`);\n  }\n  getQuestion(id) {\n    return this._http.get(`${this.baseUrl}/${id}`);\n  }\n  createQuestion(newItem) {\n    return this._http.post(`${this.baseUrl}/create`, newItem);\n  }\n  updateQuestion(questionId, newQuestion) {\n    const url = `api/question/update/${questionId}`;\n    newQuestion.questionId = questionId;\n    return this._http.put(url, newQuestion);\n  }\n  deleteQuestion(questionId) {\n    const url = `api/question/delete/${questionId}`;\n    return this._http.delete(url);\n  }\n}\nQuestionService.ɵfac = function QuestionService_Factory(t) {\n  return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n};\nQuestionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuestionService,\n  factory: QuestionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,cAAc;EAES;EAEzCC,YAAY;IACV,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAc,IAAI,CAACC,OAAO,CAAC;EAClD;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACJ,KAAK,CAACE,GAAG,CAAc,GAAG,IAAI,CAACC,OAAO,OAAO,CAAC;EAC5D;EAEAE,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACN,KAAK,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,OAAO,IAAIG,EAAE,EAAE,CAAC;EAC3D;EAEAC,cAAc,CAACC,OAAkB;IAC/B,OAAO,IAAI,CAACR,KAAK,CAACS,IAAI,CAAM,GAAG,IAAI,CAACN,OAAO,SAAS,EAAEK,OAAO,CAAC;EAChE;EAEAE,cAAc,CAACC,UAAkB,EAAEC,WAAgB;IACjD,MAAMC,GAAG,GAAG,uBAAuBF,UAAU,EAAE;IAC/CC,WAAW,CAACD,UAAU,GAAGA,UAAU;IACnC,OAAO,IAAI,CAACX,KAAK,CAACc,GAAG,CAAMD,GAAG,EAAED,WAAW,CAAC;EAC9C;EAEAG,cAAc,CAACJ,UAAkB;IAC/B,MAAME,GAAG,GAAG,uBAAuBF,UAAU,EAAE;IAC/C,OAAO,IAAI,CAACX,KAAK,CAACgB,MAAM,CAACH,GAAG,CAAC;EAC/B;;AA/BWf,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAmB,SAAfnB,eAAe;EAAAoB,YAHd;AAAM","names":["QuestionService","constructor","_http","getQuestions","get","baseUrl","getUserQuestions","getQuestion","id","createQuestion","newItem","post","updateQuestion","questionId","newQuestion","url","put","deleteQuestion","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/ITPE3200/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questions.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IQuestion } from './question'; \n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class QuestionService {\n\n  private baseUrl = 'api/question';\n\n  constructor(private _http: HttpClient) { }\n\n  getQuestions(): Observable<IQuestion[]> {\n    return this._http.get<IQuestion[]>(this.baseUrl);\n  }\n\n  getUserQuestions(): Observable<IQuestion[]> {\n    return this._http.get<IQuestion[]>(`${this.baseUrl}/user`)\n  }\n\n  getQuestion(id: number): Observable<IQuestion> {\n    return this._http.get<IQuestion>(`${this.baseUrl}/${id}`)\n  }\n\n  createQuestion(newItem: IQuestion): Observable<any> {\n    return this._http.post<any>(`${this.baseUrl}/create`, newItem);\n  }\n\n  updateQuestion(questionId: number, newQuestion: any): Observable<any> {\n    const url = `api/question/update/${questionId}`\n    newQuestion.questionId = questionId;\n    return this._http.put<any>(url, newQuestion);\n  }\n\n  deleteQuestion(questionId: number): Observable<any> {\n    const url = `api/question/delete/${questionId}`;\n    return this._http.delete(url);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}