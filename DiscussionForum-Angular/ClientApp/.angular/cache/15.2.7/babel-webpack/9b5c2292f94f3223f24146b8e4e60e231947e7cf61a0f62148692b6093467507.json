{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./questions.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../shared/questionOverviewCard.component\";\nconst _c0 = function (a1) {\n  return [\"/questions\", a1];\n};\nfunction QuestionsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 6)(2, \"div\", 7);\n    i0.ɵɵelement(3, \"app-question-overview-card-component\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, question_r1.QuestionId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"question\", question_r1);\n  }\n}\nconst _c1 = function () {\n  return {\n    standalone: true\n  };\n};\nexport class QuestionsComponent {\n  constructor(_questionService) {\n    this._questionService = _questionService;\n    this._questionFilter = \"\";\n    this.questions = [];\n    this.filteredQuestions = this.questions;\n  }\n  get questionFilter() {\n    return this._questionFilter;\n  }\n  set questionFilter(value) {\n    this._questionFilter = value;\n    this.filteredQuestions = this.performFilter(value);\n  }\n  getQuestions() {\n    this._questionService.getQuestions().subscribe(data => {\n      console.log(\"All\", data);\n      this.questions = data;\n      this.filteredQuestions = this.questions;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.questions.filter(question => question.Title.toLocaleLowerCase().includes(filterBy));\n  }\n  ngOnInit() {\n    this.getQuestions();\n    this.filteredQuestions = this.questions;\n  }\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.QuestionService));\n};\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions-component\"]],\n  decls: 8,\n  vars: 4,\n  consts: [[1, \"text-center\", \"mb-4\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [\"asp-action\", \"AllQuestions\", \"method\", \"get\", 1, \"flex-grow-1\", \"search-container\", \"position-relative\"], [\"type\", \"text\", \"placeholder\", \"Search for questions\", 1, \"w-100\", \"py-2\", \"px-3\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Search\", 1, \"search-btn\", \"position-absolute\", \"h-100\", \"px-2\"], [4, \"ngFor\", \"ngForOf\"], [1, \"question-card\", 3, \"routerLink\"], [1, \"py-3\", \"forum-border\"], [3, \"question\"]],\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"List of questions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.questionFilter = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵtemplate(7, QuestionsComponent_div_7_Template, 4, 4, \"div\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.questionFilter)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c1));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredQuestions);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.RouterLink, i5.QuestionOverviewCardComponent],\n  styles: [\".disabled[_ngcontent-%COMP%] {\\n  pointer-events: none;\\n  color: #212529;\\n}\\n\\n.search-btn[_ngcontent-%COMP%] {\\n  top: 0;\\n  right: 0;\\n  border: none;\\n  border-radius: 0;\\n  background-color: #232b4c;\\n  color: inherit;\\n}\\n\\n.question-card[_ngcontent-%COMP%]:hover {\\n  color: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0VBQ3BCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxNQUFNO0VBQ04sUUFBUTtFQUNSLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIseUJBQXlCO0VBQ3pCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmRpc2FibGVkIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIGNvbG9yOiAjMjEyNTI5O1xufVxuXG4uc2VhcmNoLWJ0biB7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzMmI0YztcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi5xdWVzdGlvbi1jYXJkOmhvdmVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IASQA,2BAAgD;IAGpCA,0DAAmG;IACvGA,iBAAM;;;;IAHeA,eAAkD;IAAlDA,+EAAkD;IAE7BA,eAAqB;IAArBA,sCAAqB;;;;;;;;ACD/E,OAAM,MAAOC,kBAAkB;EAM7BC,YAAoBC,gBAAiC;IAAjC,qBAAgB,GAAhBA,gBAAgB;IAJ5B,oBAAe,GAAW,EAAE;IACpC,cAAS,GAAgB,EAAE;IAC3B,sBAAiB,GAAgB,IAAI,CAACC,SAAS;EAEU;EAEzD,IAAIC,cAAc;IAChB,OAAO,IAAI,CAACC,eAAe;EAC7B;EAEA,IAAID,cAAc,CAACE,KAAa;IAC9B,IAAI,CAACD,eAAe,GAAGC,KAAK;IAC5B,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;EACpD;EAEAG,YAAY;IACV,IAAI,CAACP,gBAAgB,CAACO,YAAY,EAAE,CACjCC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,IAAI,CAAC;MACxB,IAAI,CAACR,SAAS,GAAGQ,IAAI;MACrB,IAAI,CAACJ,iBAAiB,GAAG,IAAI,CAACJ,SAAS;IACzC,CAAC,CAAC;EACN;EAEAK,aAAa,CAACM,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAACZ,SAAS,CAACa,MAAM,CAAEC,QAAmB,IAC/CA,QAAQ,CAACC,KAAK,CAACH,iBAAiB,EAAE,CAACI,QAAQ,CAACL,QAAQ,CAAC,CAAC;EAC1D;EAEAM,QAAQ;IACN,IAAI,CAACX,YAAY,EAAE;IACnB,IAAI,CAACF,iBAAiB,GAAG,IAAI,CAACJ,SAAS;EACzC;;AAnCWH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX/B1B,6BAA6B;MAAAA,iCAAiB;MAAAA,iBAAK;MAEnDA,8BAAsC;MAEXA;QAAA;MAAA,EAA4B;MAA/CA,iBAAkJ;MAClJA,2BAAsF;MAC1FA,iBAAO;MAEPA,2BAAK;MACDA,mEAMM;MASVA,iBAAM;;;MApBiBA,eAA4B;MAA5BA,4CAA4B;MAKrBA,eAAoB;MAApBA,+CAAoB","names":["i0","QuestionsComponent","constructor","_questionService","questions","questionFilter","_questionFilter","value","filteredQuestions","performFilter","getQuestions","subscribe","data","console","log","filterBy","toLocaleLowerCase","filter","question","Title","includes","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questions.component.html","/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questions.component.ts"],"sourcesContent":["<h1 class=\"text-center mb-4\">List of questions</h1>\n\n<div class=\"d-flex flex-column gap-3\">\n    <form asp-action=\"AllQuestions\" class=\"flex-grow-1 search-container position-relative\" method=\"get\">\n        <input type=\"text\" [(ngModel)]=\"questionFilter\" class=\"w-100 py-2 px-3\" placeholder=\"Search for questions\" [ngModelOptions]=\"{standalone: true}\"/>\n        <input type=\"submit\" value=\"Search\" class=\"search-btn position-absolute h-100 px-2\" />\n    </form>\n\n    <div>\n        <div *ngFor=\"let question of filteredQuestions\">\n            <a class=\"question-card\" [routerLink]=\"['/questions', question.QuestionId]\">\n                <div class=\"py-3 forum-border\">\n                    <app-question-overview-card-component [question]=\"question\"></app-question-overview-card-component>\n                </div>\n            </a>\n        </div>\n        <!--@foreach (var question in Model.PaginatedList)\n        {\n        <a class=\"question-card\" asp-controller=\"Question\" asp-action=\"Details\" asp-route-id=\"@question.QuestionId\">\n            <div class=\"py-3 forum-border\">\n                <partial name=\"_QuestionOverviewCard\" model=\"question\" />\n            </div>\n        </a>\n        }-->\n    </div>\n\n    <!---\n    <div class=\"d-flex flex-column gap-2 align-items-end\">\n        <div class=\"d-flex gap-4\">\n            <a asp-action=\"AllQuestions\" asp-route-searchQuery=\"@Model.SearchQuery\" asp-route-pageNr=\"@(Model.PaginatedList.PageNr - 1)\" class=\"fw-bolder @previousButtonDisabled\">\n                Previous\n            </a>\n            <a asp-action=\"AllQuestions\" asp-route-searchQuery=\"@Model.SearchQuery\" asp-route-pageNr=\"@(Model.PaginatedList.PageNr + 1)\" class=\"fw-bolder @nextButtonDisabled\">\n                Next\n            </a>\n        </div>\n        <div>\n            @if (Model.PaginatedList.Count == 0)\n            {\n            <p class=\"small\">No questions found</p>\n            }\n            else\n            {\n            <p class=\"small\">Showing page @Model.PaginatedList.PageNr of @Model.PaginatedList.TotalPages</p>\n            }\n        </div>\n    </div>-->\n</div>\n\n","import { Component, OnInit } from \"@angular/core\"\nimport { IQuestion } from \"./question\"\nimport { HttpClient } from \"@angular/common/http\"\nimport { QuestionService } from \"./questions.service\"\n\n@Component({\n  selector: \"app-questions-component\",\n  templateUrl: \"./questions.component.html\",\n  styleUrls: [\"./questions.component.css\"]\n})\n\nexport class QuestionsComponent implements OnInit {\n\n  private _questionFilter: string = \"\"\n  questions: IQuestion[] = []\n  filteredQuestions: IQuestion[] = this.questions;\n\n  constructor(private _questionService: QuestionService) { }\n\n  get questionFilter(): string {\n    return this._questionFilter\n  }\n\n  set questionFilter(value: string) {\n    this._questionFilter = value\n    this.filteredQuestions = this.performFilter(value)\n  }\n\n  getQuestions(): void {\n    this._questionService.getQuestions()\n      .subscribe(data => {\n        console.log(\"All\", data);\n        this.questions = data;\n        this.filteredQuestions = this.questions;\n      })\n  }\n\n  performFilter(filterBy: string): IQuestion[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.questions.filter((question: IQuestion) =>\n      question.Title.toLocaleLowerCase().includes(filterBy));\n  }\n\n  ngOnInit(): void {\n    this.getQuestions()\n    this.filteredQuestions = this.questions; \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}