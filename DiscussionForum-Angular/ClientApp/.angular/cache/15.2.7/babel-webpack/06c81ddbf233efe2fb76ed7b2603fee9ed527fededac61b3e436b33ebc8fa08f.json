{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./authentication.service\";\nexport class RegisterComponent {\n  constructor(_formbuilder, _authService) {\n    this._formbuilder = _formbuilder;\n    this._authService = _authService;\n    this.registerForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n  registerUser() {\n    const newUser = this.registerForm.value;\n    this.authService.register(newUser).subscribe(response => {\n      console.log('Registration successful:', response);\n      // Optionally, handle successful registration\n    }, error => {\n      console.error('Registration failed:', error);\n      // Handle registration error\n    });\n  }\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register-component\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter your username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.registerUser();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;AAOrG,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,YAAyB,EAAUC,YAAyB;IAA5D,iBAAY,GAAZD,YAAY;IAAuB,iBAAY,GAAZC,YAAY;IACjE,IAAI,CAACC,YAAY,GAAGF,YAAY,CAACG,KAAK,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ;KACnC,CAAC;EACJ;EAEAE,YAAY;IACV,MAAMC,OAAO,GAAG,IAAI,CAACN,YAAY,CAACO,KAAK;IAEvC,IAAI,CAACC,WAAW,CAACC,QAAQ,CAACH,OAAO,CAAC,CAC/BI,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD;IACF,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CACF;EACL;;;AAxBWlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BC,+BAA6D;MAA5BA;QAAA,OAAYC,kBAAc;MAAA,EAAC;MACxDD,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAAmH;MACvHA,iBAAM;MACNA,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAAuH;MAC3HA,iBAAM;MACNA,iCAA8C;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAT7DA,4CAA0B","names":["Validators","RegisterComponent","constructor","_formbuilder","_authService","registerForm","group","username","required","password","registerUser","newUser","value","authService","register","subscribe","response","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/register.component.ts","/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/register.component.html"],"sourcesContent":["\nimport { Component, OnInit } from \"@angular/core\"\nimport { AuthService } from \"./authentication.service\"\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\"\n\n@Component({\n  selector: \"app-register-component\",\n  templateUrl: \"./register.component.html\",\n})\n\nexport class RegisterComponent  {\n  registerForm: FormGroup;\n\n  constructor(private _formbuilder: FormBuilder, private _authService: AuthService) {\n    this.registerForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  registerUser() {\n    const newUser = this.registerForm.value\n\n    this.authService.register(newUser)\n      .subscribe(\n        (response) => {\n          console.log('Registration successful:', response);\n          // Optionally, handle successful registration\n        },\n        (error) => {\n          console.error('Registration failed:', error);\n          // Handle registration error\n        }\n      );\n  }\n}","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n    <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Enter your username\" formControlName=\"username\">\n    </div>\n    <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Enter your password\" formControlName=\"password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n</form>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}