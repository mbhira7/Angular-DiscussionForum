{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authentication/authentication.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./questions.service\";\nimport * as i5 from \"../replies/replies.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../shared/questionReplyCard.component\";\nimport * as i8 from \"../shared/questionDetailCard.component\";\nfunction QuestiondetailComponent_div_0_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13);\n    i0.ɵɵelement(2, \"app-question-reply-card-component\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const reply_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"reply\", reply_r3);\n  }\n}\nfunction QuestiondetailComponent_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, QuestiondetailComponent_div_0_div_2_div_1_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementStart(2, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function QuestiondetailComponent_div_0_div_2_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵelement(3, \"input\", 7);\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵelement(5, \"input\", 9)(6, \"span\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 11);\n    i0.ɵɵtext(8, \"Submit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.question.replies);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.replyForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.replyForm.invalid);\n  }\n}\nfunction QuestiondetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"app-question-detail-card-component\", 2);\n    i0.ɵɵtemplate(2, QuestiondetailComponent_div_0_div_2_Template, 9, 3, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"question\", ctx_r0.question);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.question.replies);\n  }\n}\nexport class QuestiondetailComponent {\n  constructor(_auth, _formbuilder, _router, _route, _questionService, _replyService) {\n    this._auth = _auth;\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._questionService = _questionService;\n    this._replyService = _replyService;\n    // Initializing the reply form with form controls and validation\n    this.replyForm = _formbuilder.group({\n      content: [\"\", Validators.required]\n    });\n  }\n  // Method to fetch a question by its ID\n  getQuestionById(id) {\n    this._questionService.getQuestion(id).subscribe(data => {\n      console.log(\"Question\", data);\n      this.question = data;\n    });\n  }\n  // Method invoked on form submission to create a new reply\n  onSubmit() {\n    if (this._auth.isLoggedIn && this.question) {\n      const newReply = {\n        ...this.replyForm.value,\n        questionId: this.question.questionId\n      };\n      this._replyService.createReply(newReply).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate([\"/questions\"]);\n        } else {\n          console.log(\"Reply creation failed\");\n        }\n      });\n    } else {\n      alert(\"Log in to submit a reply\");\n      this._router.navigate(['auth/login']);\n    }\n  }\n  ngOnInit() {\n    //Used to retreve the question id\n    const id = Number(this._route.snapshot.paramMap.get('id'));\n    this.getQuestionById(id);\n  }\n}\nQuestiondetailComponent.ɵfac = function QuestiondetailComponent_Factory(t) {\n  return new (t || QuestiondetailComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.QuestionService), i0.ɵɵdirectiveInject(i5.ReplyService));\n};\nQuestiondetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestiondetailComponent,\n  selectors: [[\"app-questiondetail-component\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"my-5 border p-3 rounded-2\", 4, \"ngIf\"], [1, \"my-5\", \"border\", \"p-3\", \"rounded-2\"], [3, \"question\"], [\"class\", \"p-3 margin d-flex flex-column gap-3\", 4, \"ngIf\"], [1, \"p-3\", \"margin\", \"d-flex\", \"flex-column\", \"gap-3\"], [\"class\", \"d-flex flex-column gap-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"gap-3\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"hidden\", \"value\", \"question.questionId\"], [1, \"form-group\", \"w-100\"], [\"formControlName\", \"content\", \"placeholder\", \"Write a reply\", 1, \"py-2\", \"px-3\", \"w-100\"], [1, \"text-danger\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-btn\", \"py-2\", \"px-3\", \"rounded-5\", 3, \"disabled\"], [1, \"d-flex\", \"flex-column\", \"gap-3\"], [1, \"d-flex\", \"justify-content-between\", \"card-bg\", \"px-3\", \"py-2\", \"rounded-3\"], [3, \"reply\"]],\n  template: function QuestiondetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, QuestiondetailComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.question);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i7.QuestionReplyCardComponent, i8.QuestionDetailCardComponent],\n  styles: [\".user-img-container[_ngcontent-%COMP%] {\\n        width: 50px;\\n    }\\n\\n    .card-bg[_ngcontent-%COMP%] {\\n        background: #1e1d21;\\n    }\\n\\n    .margin[_ngcontent-%COMP%] {\\n        margin-left: 5rem;\\n    }\\n\\n    .submit-btn[_ngcontent-%COMP%] {\\n        height: fit-content;\\n    }\\n\\n    .editBtn[_ngcontent-%COMP%]:hover {\\n        color: #649ef4;\\n    }\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;;;;;;;;;ICK7FC,+BAA6E;IAGrEA,wDAAuF;IAO3FA,iBAAM;;;;IAPiCA,eAAe;IAAfA,gCAAe;;;;;;IAL9DA,8BAA0E;IAEtEA,oFAYM;IAGNA,+BAA2E;IAAxBA;MAAAA;MAAA;MAAA,OAAYA,gCAAU;IAAA,EAAC;IACtEA,2BAAmD;IAEnDA,8BAA8B;IAC1BA,2BAAuF;IAE3FA,iBAAM;IAENA,kCAA4G;IAAAA,sBAAM;IAAAA,iBAAS;;;;IAvBvEA,eAAmB;IAAnBA,iDAAmB;IAerEA,eAAuB;IAAvBA,4CAAuB;IAQjBA,eAA8B;IAA9BA,mDAA8B;;;;;IA7BlDA,8BAAwD;IAEpDA,wDAA+F;IAE/FA,8EA2BM;IACVA,iBAAM;;;;IA9BkCA,eAAqB;IAArBA,0CAAqB;IAEPA,eAAsB;IAAtBA,8CAAsB;;;ADW5E,OAAM,MAAOC,uBAAuB;EAIlCC,YAAoBC,KAAkB,EAAUC,YAAyB,EAAUC,OAAe,EACxFC,MAAsB,EAAUC,gBAAiC,EAAUC,aAA2B;IAD5F,UAAK,GAALL,KAAK;IAAuB,iBAAY,GAAZC,YAAY;IAAuB,YAAO,GAAPC,OAAO;IAChF,WAAM,GAANC,MAAM;IAA0B,qBAAgB,GAAhBC,gBAAgB;IAA2B,kBAAa,GAAbC,aAAa;IAEhG;IACA,IAAI,CAACC,SAAS,GAAGL,YAAY,CAACM,KAAK,CAAC;MAClCC,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ;KAClC,CAAC;EACJ;EAEA;EACAC,eAAe,CAACC,EAAU;IACxB,IAAI,CAACP,gBAAgB,CAACQ,WAAW,CAACD,EAAE,CAAC,CAClCE,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;MAC7B,IAAI,CAACG,QAAQ,GAAGH,IAAI;IACtB,CAAC,CAAC;EACN;EAEA;EACAI,QAAQ;IACN,IAAI,IAAI,CAAClB,KAAK,CAACmB,UAAU,IAAI,IAAI,CAACF,QAAQ,EAAE;MAC1C,MAAMG,QAAQ,GAAG;QACf,GAAG,IAAI,CAACd,SAAS,CAACe,KAAK;QACvBC,UAAU,EAAE,IAAI,CAACL,QAAQ,CAACK;OAC3B;MAED,IAAI,CAACjB,aAAa,CAACkB,WAAW,CAACH,QAAQ,CAAC,CACrCP,SAAS,CAACW,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBV,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAACxB,OAAO,CAACyB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACtC,MACI;UACHZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;MAExC,CAAC,CAAC;KACL,MACI;MACHY,KAAK,CAAC,0BAA0B,CAAC;MACjC,IAAI,CAAC1B,OAAO,CAACyB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;EAEzC;EAGAE,QAAQ;IAEN;IACA,MAAMlB,EAAE,GAAGmB,MAAM,CAAC,IAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAE1D,IAAI,CAACvB,eAAe,CAACC,EAAE,CAAC;EAC1B;;AAtDWb,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAoC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfpCzC,wEAgCM;;;MAhCkCA,mCAAc","names":["Validators","i0","QuestiondetailComponent","constructor","_auth","_formbuilder","_router","_route","_questionService","_replyService","replyForm","group","content","required","getQuestionById","id","getQuestion","subscribe","data","console","log","question","onSubmit","isLoggedIn","newReply","value","questionId","createReply","response","success","message","navigate","alert","ngOnInit","Number","snapshot","paramMap","get","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/ITPE3200/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questiondetail.component.ts","/Users/bhira/Desktop/Skole/5.semester/ITPE3200/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questiondetail.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\"\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\"\nimport { ActivatedRoute } from \"@angular/router\"\nimport { HttpClient } from \"@angular/common/http\"\nimport { QuestionService } from \"./questions.service\"\nimport { ReplyService } from \"../replies/replies.service\"\nimport { IQuestion } from \"./question\"\nimport { Router } from \"@angular/router\"\nimport { AuthService } from \"../authentication/authentication.service\"\n\n@Component({\n  selector: \"app-questiondetail-component\",\n  templateUrl: \"./questiondetail.component.html\",\n})\n\nexport class QuestiondetailComponent implements OnInit {\n  replyForm: FormGroup;\n  question: IQuestion | undefined\n\n  constructor(private _auth: AuthService, private _formbuilder: FormBuilder, private _router: Router,\n    private _route: ActivatedRoute, private _questionService: QuestionService, private _replyService: ReplyService) {\n\n    // Initializing the reply form with form controls and validation\n    this.replyForm = _formbuilder.group({\n      content: [\"\", Validators.required],\n    });\n  }\n\n  // Method to fetch a question by its ID\n  getQuestionById(id: number): void {\n    this._questionService.getQuestion(id)\n      .subscribe(data => {\n        console.log(\"Question\", data)\n        this.question = data;\n      })\n  }\n\n  // Method invoked on form submission to create a new reply\n  onSubmit() {\n    if (this._auth.isLoggedIn && this.question) {\n      const newReply = {\n        ...this.replyForm.value,\n        questionId: this.question.questionId \n      };\n\n      this._replyService.createReply(newReply)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message)\n            this._router.navigate([\"/questions\"])\n          }\n          else {\n            console.log(\"Reply creation failed\")\n          }\n        })\n    }\n    else {\n      alert(\"Log in to submit a reply\");\n      this._router.navigate(['auth/login']);\n    }\n  }\n\n\n  ngOnInit(): void {\n\n    //Used to retreve the question id\n    const id = Number(this._route.snapshot.paramMap.get('id'));\n\n    this.getQuestionById(id);\n  }\n \n}\n","<div class=\"my-5 border p-3 rounded-2\" *ngIf=\"question\">\n   \n    <app-question-detail-card-component [question]=\"question\"></app-question-detail-card-component>\n\n    <div class=\"p-3 margin d-flex flex-column gap-3\" *ngIf=\"question.replies\">\n        \n        <div class=\"d-flex flex-column gap-3\" *ngFor=\"let reply of question.replies\">\n           \n            <div class=\"d-flex justify-content-between card-bg px-3 py-2 rounded-3\">\n                <app-question-reply-card-component [reply]=\"reply\"></app-question-reply-card-component>\n\n                <!--@if (Model.UserId == reply.User.Id)\n                {\n                <a class=\"editBtn\" id=\"editBtn-@reply.ReplyId\">Edit</a>\n                }-->\n\n            </div>\n            \n        </div>\n        \n\n        <form [formGroup]=\"replyForm\" class=\"d-flex gap-3\" (ngSubmit)=\"onSubmit()\">\n            <input type=\"hidden\" value=\"question.questionId\" />\n\n            <div class=\"form-group w-100\">\n                <input formControlName=\"content\" class=\"py-2 px-3 w-100\" placeholder=\"Write a reply\" />\n                <span class=\"text-danger\"></span>\n            </div>\n\n            <button [disabled]=\"replyForm.invalid\" class=\"btn btn-primary submit-btn py-2 px-3 rounded-5\" type=\"submit\">Submit</button>\n        </form>\n    </div>\n</div>\n\n\n<style>\r\n    .user-img-container {\r\n        width: 50px;\r\n    }\n\n    .card-bg {\n        background: #1e1d21;\n    }\n\n    .margin {\n        margin-left: 5rem;\n    }\n\n    .submit-btn {\n        height: fit-content;\n    }\n\n    .editBtn:hover {\n        color: #649ef4;\n    }\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}