{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  setLoggedIn(value) {\n    this.loggedIn = value;\n  }\n  get isLoggedIn() {\n    return this.loggedIn;\n  }\n  constructor(http) {\n    this.http = http;\n    this.loggedIn = false;\n    this.baseUrl = 'api/auth';\n  }\n  register(user) {\n    return this.http.post(`${this.baseUrl}/register`, user);\n  }\n  login(user) {\n    return this.http.post(`${this.baseUrl}/login`, user);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,WAAW,CAACC,KAAc;IACxB,IAAI,CAACC,QAAQ,GAAGD,KAAK;EACvB;EAEA,IAAIE,UAAU;IACZ,OAAO,IAAI,CAACD,QAAQ;EACtB;EAIAE,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAZxB,aAAQ,GAAG,KAAK;IAUR,YAAO,GAAG,UAAU;EAEY;EAExCC,QAAQ,CAACC,IAAS;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,WAAW,EAAEF,IAAI,CAAC;EAC9D;EAEAG,KAAK,CAACH,IAAS;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAEF,IAAI,CAAC;EAC3D;;AArBWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["AuthService","setLoggedIn","value","loggedIn","isLoggedIn","constructor","http","register","user","post","baseUrl","login","factory","providedIn"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  loggedIn = false;\n\n  setLoggedIn(value: boolean) {\n    this.loggedIn = value;\n  }\n\n  get isLoggedIn() {\n    return this.loggedIn;\n  }\n\n  private baseUrl = 'api/auth';\n\n  constructor(private http: HttpClient) { }\n\n  register(user: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/register`, user);\n  }\n\n  login(user: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/login`, user);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}