{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = 'api/question/';\n  }\n  getQuestions() {\n    return this._http.get(this.baseUrl);\n  }\n  getQuestion(id) {\n    return this._http.get(`api/question/${id}`);\n  }\n  createQuestion(newItem) {\n    const createUrl = 'api/question/create';\n    return this._http.post(createUrl, newItem);\n  }\n}\nQuestionService.ɵfac = function QuestionService_Factory(t) {\n  return new (t || QuestionService)(i0.ɵɵinject(i1.HttpClient));\n};\nQuestionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QuestionService,\n  factory: QuestionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,eAAe;EAEQ;EAEzCC,YAAY;IACV,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAc,IAAI,CAACC,OAAO,CAAC;EAClD;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,KAAK,CAACE,GAAG,CAAY,gBAAgBG,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAc,CAACC,OAAkB;IAC/B,MAAMC,SAAS,GAAG,qBAAqB;IACvC,OAAO,IAAI,CAACR,KAAK,CAACS,IAAI,CAAMD,SAAS,EAAED,OAAO,CAAC;EACjD;;AAjBWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;EAAAa,YAHd;AAAM","names":["QuestionService","constructor","_http","getQuestions","get","baseUrl","getQuestion","id","createQuestion","newItem","createUrl","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/questions/questions.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IQuestion } from './question'; \n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class QuestionService {\n\n  private baseUrl = 'api/question/';\n\n  constructor(private _http: HttpClient) { }\n\n  getQuestions(): Observable<IQuestion[]> {\n    return this._http.get<IQuestion[]>(this.baseUrl);\n  }\n\n  getQuestion(id: number): Observable<IQuestion> {\n    return this._http.get<IQuestion>(`api/question/${id}`)\n  }\n\n  createQuestion(newItem: IQuestion): Observable<any> {\n    const createUrl = 'api/question/create';\n    return this._http.post<any>(createUrl, newItem);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}