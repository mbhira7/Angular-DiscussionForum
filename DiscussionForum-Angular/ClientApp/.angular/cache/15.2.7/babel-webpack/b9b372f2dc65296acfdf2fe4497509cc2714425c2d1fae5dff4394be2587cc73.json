{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReplyService {\n  constructor(_http) {\n    this._http = _http;\n    // Base URL for reply-related API endpoints\n    this.baseUrl = 'api/reply';\n  }\n  // Creates a new reply\n  createReply(newReply) {\n    return this._http.post(`${this.baseUrl}/create`, newReply);\n  }\n  // Updates a reply by ID\n  updateReply(replyId, newReply) {\n    const url = `${this.baseUrl}/update/${replyId}`;\n    newReply.replyId = replyId;\n    return this._http.put(url, newReply);\n  }\n}\nReplyService.ɵfac = function ReplyService_Factory(t) {\n  return new (t || ReplyService)(i0.ɵɵinject(i1.HttpClient));\n};\nReplyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReplyService,\n  factory: ReplyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,YAAY;EAKvBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAHzB;IACQ,YAAO,GAAG,WAAW;EAEY;EAEzC;EACAC,WAAW,CAACC,QAAgB;IAC1B,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAAM,GAAG,IAAI,CAACC,OAAO,SAAS,EAAEF,QAAQ,CAAC;EACjE;EAEA;EACAG,WAAW,CAACC,OAAe,EAAEJ,QAAa;IACxC,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACH,OAAO,WAAWE,OAAO,EAAE;IAC/CJ,QAAQ,CAACI,OAAO,GAAGA,OAAO;IAC1B,OAAO,IAAI,CAACN,KAAK,CAACQ,GAAG,CAAMD,GAAG,EAAEL,QAAQ,CAAC;EAC3C;;AAjBWJ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAHX;AAAM","names":["ReplyService","constructor","_http","createReply","newReply","post","baseUrl","updateReply","replyId","url","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/ITPE3200/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/replies/replies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IReply } from './reply';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ReplyService {\n\n  // Base URL for reply-related API endpoints\n  private baseUrl = 'api/reply';\n\n  constructor(private _http: HttpClient) { }\n\n  // Creates a new reply\n  createReply(newReply: IReply): Observable<any> {\n    return this._http.post<any>(`${this.baseUrl}/create`, newReply);\n  }\n\n  // Updates a reply by ID\n  updateReply(replyId: number, newReply: any): Observable<any> {\n    const url = `${this.baseUrl}/update/${replyId}`\n    newReply.replyId = replyId;\n    return this._http.put<any>(url, newReply);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}