{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./authentication.service\";\nimport * as i3 from \"@angular/common\";\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.usernameErrorMessage);\n  }\n}\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.passwordErrorMessage);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"error\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(_formbuilder, _authService) {\n    this._formbuilder = _formbuilder;\n    this._authService = _authService;\n    this.usernameErrorMessage = '';\n    this.passwordErrorMessage = '';\n    this.registerForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/)]]\n    });\n  }\n  registerUser() {\n    //If registartion is valid\n    if (this.registerForm.valid) {\n      const newUser = this.registerForm.value;\n      this._authService.register(newUser).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n        } else {\n          console.log(\"User creation failed\");\n        }\n      });\n    } else {\n      const usernameControl = this.registerForm.get('username');\n      const passwordControl = this.registerForm.get('password');\n      if (usernameControl?.errors) {\n        this.usernameErrorMessage = 'Error! Please choose another username';\n      }\n      if (passwordControl?.errors) {\n        this.passwordErrorMessage = 'Error! Password does not meet the requirements.';\n      }\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register-component\"]],\n  decls: 13,\n  vars: 9,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter your username\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"error-message\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.registerUser();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.usernameErrorMessage !== \"\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.usernameErrorMessage !== \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.passwordErrorMessage !== \"\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.passwordErrorMessage !== \"\");\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;;;;ICEjGC,8BAA+D;IAAAA,YAA0B;IAAAA,iBAAM;;;;IAAhCA,eAA0B;IAA1BA,iDAA0B;;;;;IAKzFA,8BAA+D;IAAAA,YAA0B;IAAAA,iBAAM;;;;IAAhCA,eAA0B;IAA1BA,iDAA0B;;;;;;;;ADA7F,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,YAAyB,EAAUC,YAAyB;IAA5D,iBAAY,GAAZD,YAAY;IAAuB,iBAAY,GAAZC,YAAY;IAHnE,yBAAoB,GAAW,EAAE;IACjC,yBAAoB,GAAW,EAAE;IAG/B,IAAI,CAACC,YAAY,GAAGF,YAAY,CAACG,KAAK,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,OAAO,CAAC,uDAAuD,CAAC,CAAC;KAClH,CAAC;EACJ;EAEAC,YAAY;IACV;IACA,IAAI,IAAI,CAACN,YAAY,CAACO,KAAK,EAAE;MAC3B,MAAMC,OAAO,GAAG,IAAI,CAACR,YAAY,CAACS,KAAK;MAEvC,IAAI,CAACV,YAAY,CAACW,QAAQ,CAACF,OAAO,CAAC,CAChCG,SAAS,CAACC,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,OAAO,CAAC;SAC9B,MACI;UACHF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;MAEvC,CAAC,CAAC;KACL,MAEI;MACH,MAAME,eAAe,GAAG,IAAI,CAACjB,YAAY,CAACkB,GAAG,CAAC,UAAU,CAAC;MACzD,MAAMC,eAAe,GAAG,IAAI,CAACnB,YAAY,CAACkB,GAAG,CAAC,UAAU,CAAC;MAEzD,IAAID,eAAe,EAAEG,MAAM,EAAE;QAC3B,IAAI,CAACC,oBAAoB,GAAG,uCAAuC;;MAGrE,IAAIF,eAAe,EAAEC,MAAM,EAAE;QAC3B,IAAI,CAACE,oBAAoB,GAAG,iDAAiD;;;EAKnF;;AA1CW1B,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BhC,+BAA6D;MAA5BA;QAAA,OAAYiC,kBAAc;MAAA,EAAC;MACxDjC,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAAwK;MAC5KA,iBAAM;MACNA,kEAA+F;MAC/FA,8BAAkB;MAC2BA,wBAAQ;MAAAA,iBAAQ;MACzDA,2BAA4K;MAChLA,iBAAM;MACNA,oEAA+F;MAC/FA,kCAA8C;MAAAA,yBAAQ;MAAAA,iBAAS;;;MAX7DA,4CAA0B;MAG2FA,eAAoD;MAApDA,qFAAoD;MAErKA,eAAiC;MAAjCA,sDAAiC;MAGoFA,eAAoD;MAApDA,qFAAoD;MAEzKA,eAAiC;MAAjCA,sDAAiC","names":["Validators","i0","RegisterComponent","constructor","_formbuilder","_authService","registerForm","group","username","required","password","pattern","registerUser","valid","newUser","value","register","subscribe","response","success","console","log","message","usernameControl","get","passwordControl","errors","usernameErrorMessage","passwordErrorMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/register.component.ts","/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/register.component.html"],"sourcesContent":["\nimport { Component, OnInit } from \"@angular/core\"\nimport { AuthService } from \"./authentication.service\"\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\"\n\n@Component({\n  selector: \"app-register-component\",\n  templateUrl: \"./register.component.html\",\n})\n\nexport class RegisterComponent  {\n  registerForm: FormGroup;\n  usernameErrorMessage: string = '';\n  passwordErrorMessage: string = '';\n\n  constructor(private _formbuilder: FormBuilder, private _authService: AuthService) {\n    this.registerForm = _formbuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}$/)]]\n    });\n  }\n\n  registerUser() {\n    //If registartion is valid\n    if (this.registerForm.valid) {\n      const newUser = this.registerForm.value\n\n      this._authService.register(newUser)\n        .subscribe(response => {\n          if (response.success) {\n            console.log(response.message)\n          }\n          else {\n            console.log(\"User creation failed\")\n          }\n        })\n    }\n\n    else {\n      const usernameControl = this.registerForm.get('username');\n      const passwordControl = this.registerForm.get('password');\n\n      if (usernameControl?.errors) {\n        this.usernameErrorMessage = 'Error! Please choose another username';\n      }\n\n      if (passwordControl?.errors) {\n        this.passwordErrorMessage = 'Error! Password does not meet the requirements.';\n      }\n\n    }\n   \n  }\n}","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerUser()\">\n    <div class=\"mb-3\">\n        <label for=\"username\" class=\"form-label\">Username</label>\n        <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Enter your username\" formControlName=\"username\" [ngClass]=\"{ 'error': usernameErrorMessage !== '' }\">\n    </div>\n    <div *ngIf=\"usernameErrorMessage !== ''\" class=\"error-message\">{{ usernameErrorMessage }}</div>\n    <div class=\"mb-3\">\n        <label for=\"password\" class=\"form-label\">Password</label>\n        <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Enter your password\" formControlName=\"password\" [ngClass]=\"{ 'error': passwordErrorMessage !== '' }\">\n    </div>\n    <div *ngIf=\"passwordErrorMessage !== ''\" class=\"error-message\">{{ passwordErrorMessage }}</div>\n    <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n</form>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}