{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.newUser = {\n      username: '',\n      password: ''\n    };\n  }\n  registerUser() {\n    this.authService.register(this.newUser).subscribe(response => {\n      console.log('Registration successful:', response);\n      // Optionally, handle successful registration\n    }, error => {\n      console.error('Registration failed:', error);\n      // Handle registration error\n    });\n  }\n};\n\nRegisterComponent = __decorate([Component({\n  selector: 'app-register-component',\n  templateUrl: './register.component.html'\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,YAAO,GAAQ;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;EAEG;EAEhDC,YAAY;IACV,IAAI,CAACH,WAAW,CAACI,QAAQ,CAAC,IAAI,CAACC,OAAO,CAAC,CACpCC,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD;IACF,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CACF;EACL;CACD;;AAnBYZ,iBAAiB,eAJ7BD,SAAS,CAAC;EACTc,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE;CACd,CAAC,GACWd,iBAAiB,CAmB7B;SAnBYA,iBAAiB","names":["Component","RegisterComponent","constructor","authService","username","password","registerUser","register","newUser","subscribe","response","console","log","error","selector","templateUrl"],"sourceRoot":"","sources":["/Users/bhira/Desktop/Skole/5.semester/DiscussionForum-Angular/DiscussionForum-Angular/ClientApp/src/app/authentication/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-register-component',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent {\n\n  newUser: any = { username: '', password: '' };\n\n  constructor(private authService: AuthService) { }\n\n  registerUser() {\n    this.authService.register(this.newUser)\n      .subscribe(\n        (response) => {\n          console.log('Registration successful:', response);\n          // Optionally, handle successful registration\n        },\n        (error) => {\n          console.error('Registration failed:', error);\n          // Handle registration error\n        }\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}